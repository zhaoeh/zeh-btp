<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.futech.module.insight.mapper.bh.anomaly.AnomalyGetInsightMapper">

    <select id="getInsights1" parameterType="jp.co.futech.module.insight.po.req.anomaly.AnomalyGetInsight2Req"
            resultType="jp.co.futech.module.insight.po.res.anomaly.AnomalyGetInsight1Res">
        with table1 as (
        select
        t.metric as metric1,
        t.date_points as date1,
        t.date_points as datePoints1,
        t.ggr_points as ggr1,
        t.ggr_top_points as ggrTop1,
        t.ggr_bottom_points as ggrBottom1,
        t.sub_dimension_points as subDimensionPoints1,
        t.update_dt as updateDt1,
        t.date_points as datePoints1
        from t_bi_daily_get_insight t
        <where>
            <if test="req.metric != null and req.metric != ''">
                and t.metric = #{req.metric}
            </if>
            <if test="req.startDate != null and req.startDate != ''">
                and t.date_points &gt;= #{req.startDate}
            </if>
            <if test="req.endDate != null and req.endDate != ''">
                and t.date_points &lt;= #{req.endDate}
            </if>
        </where>
        ),
        t2 as (select dt, max(create_time) as max_create_time from t_bi_anomal_dot_all group by dt),
        table2 as (
        select
        t1.metric as metric2,
        t1.date_anomalies as date2,
        t1.ggr_anomalies as ggr2,
        t1.detetion_time_anomalies as detetionTime2,
        t1.severity_anomalies as severity2,
        t1.rate_anomalies as rate2,
        t1.anomaly_describe_anomalies as anomalyDescribe2,
        t1.cause_analysis_anomalies as causeAnalysis2,
        t1.detail_anomalies as detail2,
        t3.note as note2,
        t3.remark as remark2,
        t1.sub_dimension_points as subDimensionPoints2,
        t1.update_dt as updateDt2,
        t1.date_points as datePoints2
        from t_bi_daily_get_insight t1
        left join t2
        on t1.date_points = t2.dt
        left join t_bi_anomal_dot_all t3 on t1.metric = t3.metric and
        t2.max_create_time = t3.create_time
        <where>
            <if test="req.metric != null and req.metric != ''">
                and t1.metric_anomalies = #{req.metric}
            </if>
            <if test="req.startDate != null and req.startDate != ''">
                and t1.date_anomalies &gt;= #{req.startDate}
            </if>
            <if test="req.endDate != null and req.endDate != ''">
                and t1.date_points &lt;= #{req.endDate}
            </if>
            <if test="req.severity != null and req.severity.size() == 1">
                and t1.severity_anomalies = #{req.severity[0]}
            </if>
            <if test="req.severity != null and req.severity.size() > 1">
                and t1.severity_anomalies in
                <foreach collection="req.severity" item="severityItem" index="index" open="(" separator="," close=")">
                    #{severityItem}
                </foreach>
            </if>
            <if test="req.search != null and req.search != ''">
                and t1.detail_anomalies like concat('%',#{req.search},'%')
            </if>
            <if test="req.note != null and req.note.size() == 1">
                and t3.note = #{req.note[0]}
            </if>
            <if test="req.note != null and req.note.size() > 1">
                and t3.note in
                <foreach collection="req.note" item="noteItem" index="index" open="(" separator="," close=")">
                    #{noteItem}
                </foreach>
            </if>
        </where>
        )
        select
        metric1,date1,datePoints1,ggr1,ggrTop1,ggrBottom1,metric2,
        date2,ggr2,detetionTime2,severity2,rate2,anomalyDescribe2,causeAnalysis2,detail2,note2,remark2
        from table1
        full join table2
        on table1.subDimensionPoints1 = table2.subDimensionPoints2
        and table1.updateDt1 = table2.updateDt2
        and table1.datePoints1 = table2.datePoints2
        order by date1,date2
    </select>

    <select id="getInsight1OfPoints" parameterType="jp.co.futech.module.insight.po.req.anomaly.AnomalyGetInsight2Req"
            resultType="jp.co.futech.module.insight.po.res.anomaly.AnomalyGetInsight1Res$Point">
        select
        t.metric as metric,
        t.date_points as date,
        t.ggr_points as ggr,
        t.ggr_top_points as ggrTop,
        t.ggr_bottom_points as ggrBottom
        from t_bi_daily_get_insight t
        <where>
            <if test="req.metric != null and req.metric != ''">
                and t.metric = #{req.metric}
            </if>
            <if test="req.startDate != null and req.startDate != ''">
                and t.date_points &gt;= #{req.startDate}
            </if>
            <if test="req.endDate != null and req.endDate != ''">
                and t.date_points &lt;= #{req.endDate}
            </if>
        </where>

    </select>

    <select id="getInsight1OfAnomalies" parameterType="jp.co.futech.module.insight.po.req.anomaly.AnomalyGetInsight2Req"
            resultType="jp.co.futech.module.insight.po.res.anomaly.AnomalyGetInsight1Res$Anomalie">
        with t2 as (select dt, max(create_time) as max_create_time from t_bi_anomal_dot_all group by dt)
        select
        t1.metric as metric,
        t1.date_anomalies as date,
        t1.ggr_anomalies as ggr,
        t1.detetion_time_anomalies as detetionTime,
        t1.severity_anomalies as severity,
        t1.rate_anomalies as rate,
        t1.anomaly_describe_anomalies as anomalyDescribe,
        t1.cause_analysis_anomalies as causeAnalysis,
        t1.detail_anomalies as detail,
        t3.note as note,
        t3.remark as remark
        from t_bi_daily_get_insight t1
        left join t2
        on t1.date_points = t2.dt
        left join t_bi_anomal_dot_all t3 on t1.metric = t3.metric and
        t2.max_create_time = t3.create_time
        <where>
            <if test="req.metric != null and req.metric != ''">
                and t1.metric_anomalies = #{req.metric}
            </if>
            <if test="req.startDate != null and req.startDate != ''">
                and t1.date_anomalies &gt;= #{req.startDate}
            </if>
            <if test="req.endDate != null and req.endDate != ''">
                and t1.date_points &lt;= #{req.endDate}
            </if>
            <if test="req.severity != null and req.severity.size() == 1">
                and t1.severity_anomalies = #{req.severity[0]}
            </if>
            <if test="req.severity != null and req.severity.size() > 1">
                and t1.severity_anomalies in
                <foreach collection="req.severity" item="severityItem" index="index" open="(" separator="," close=")">
                    #{severityItem}
                </foreach>
            </if>
            <if test="req.search != null and req.search != ''">
                and t1.detail_anomalies like concat('%',#{req.search},'%')
            </if>
            <if test="req.note != null and req.note.size() == 1">
                and t3.note = #{req.note[0]}
            </if>
            <if test="req.note != null and req.note.size() > 1">
                and t3.note in
                <foreach collection="req.note" item="noteItem" index="index" open="(" separator="," close=")">
                    #{noteItem}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getInsight2" parameterType="jp.co.futech.module.insight.po.req.anomaly.AnomalyGetInsight2Req"
            resultType="jp.co.futech.module.insight.po.res.anomaly.AnomalyGetInsight2Res">
        with table1 as (
        select
        t.metric as metric1,
        t.sub_dimension_points as subDimensionPoints1,
        t.date_points as datePoints1,
        t.ggr_points as ggrPoints1,
        t.ggr_top_points as ggrTopPoints1,
        t.ggr_bottom_points as ggrBottomPoints1,
        t.update_dt as updateDt1
        from t_bi_daily_get_insight2 t
        <where>
            <if test="req.metric != null and req.metric != ''">
                and t.metric = #{req.metric}
            </if>
            <if test="req.startDate != null and req.startDate != ''">
                and t.date_points &gt;= #{req.startDate}
            </if>
            <if test="req.endDate != null and req.endDate != ''">
                and t.date_points &lt;= #{req.endDate}
            </if>
            <if test="req.site != null and req.site != ''">
                and t.sub_dimension_points = #{req.site}
            </if>
        </where>
        ),
        t2 as (select dt, max(create_time) as max_create_time from t_bi_note_dot group by dt),
        table2 as (
        select
        t1.metric as metricAnomalies2,
        t1.site_anomalies as siteAnomalies2,
        t1.date_anomalies as dateAnomalies2,
        t1.ggr_anomalies as ggrAnomalies2,
        t1.detetion_time_anomalies as detetionTimeAnomalies2,
        t1.severity_anomalies as severityAnomalies2,
        t1.rate_anomalies as rateAnomalies2,
        t1.anomaly_describe_anomalies as anomalyDescribeAnomalies2,
        t1.cause_analysis_anomalies as causeAnalysisAnomalies2,
        t1.detail_anomalies as detailAnomalies2,
        t3.note as note2,
        t3.remark as remark2,
        t1.sub_dimension_points as subDimensionPoints2,
        t1.update_dt as updateDt2,
        t1.date_points as datePoints2
        from t_bi_daily_get_insight2 t1
        left join t2
        on t1.date_points = t2.dt
        left join t_bi_note_dot t3 on t1.metric = t3.metric and t1.sub_dimension_points = t3.site and
        t2.max_create_time = t3.create_time
        <where>
            <if test="req.metric != null and req.metric != ''">
                and t1.metric_anomalies = #{req.metric}
            </if>
            <if test="req.startDate != null and req.startDate != ''">
                and t1.date_anomalies &gt;= #{req.startDate}
            </if>
            <if test="req.endDate != null and req.endDate != ''">
                and t1.date_points &lt;= #{req.endDate}
            </if>
            <if test="req.site != null and req.site != ''">
                and t1.site_anomalies = #{req.site}
            </if>
            <if test="req.severity != null and req.severity.size() == 1">
                and t1.severity_anomalies = #{req.severity[0]}
            </if>
            <if test="req.severity != null and req.severity.size() > 1">
                and t1.severity_anomalies in
                <foreach collection="req.severity" item="severityItem" index="index" open="(" separator="," close=")">
                    #{severityItem}
                </foreach>
            </if>
            <if test="req.search != null and req.search != ''">
                and t1.detail_anomalies like concat('%',#{req.search},'%')
            </if>
            <if test="req.note != null and req.note.size() == 1">
                and t3.note = #{req.note[0]}
            </if>
            <if test="req.note != null and req.note.size() > 1">
                and t3.note in
                <foreach collection="req.note" item="noteItem" index="index" open="(" separator="," close=")">
                    #{noteItem}
                </foreach>
            </if>
        </where>
        )
        select
        metric1,subDimensionPoints1,datePoints1,ggrPoints1,ggrTopPoints1,ggrBottomPoints1,
        metricAnomalies2,siteAnomalies2,dateAnomalies2,ggrAnomalies2,detetionTimeAnomalies2,severityAnomalies2,
        rateAnomalies2,anomalyDescribeAnomalies2,causeAnalysisAnomalies2,detailAnomalies2,note2,remark2
        from table1
        full join table2
        on table1.subDimensionPoints1 = table2.subDimensionPoints2
        and table1.updateDt1 = table2.updateDt2
        and table1.datePoints1 = table2.datePoints2
        order by datePoints1,dateAnomalies2
    </select>

    <select id="getInsight2OfPoints" parameterType="jp.co.futech.module.insight.po.req.anomaly.AnomalyGetInsight2Req"
            resultType="jp.co.futech.module.insight.po.res.anomaly.AnomalyGetInsight2Res$Point">
        select
        t.metric,
        t.sub_dimension_points as subdimensionPoints,
        t.date_points as datePoints,
        t.ggr_points as ggrPoints,
        t.ggr_top_points as ggrTopPoints,
        t.ggr_bottom_points as ggrBottomPoints
        from t_bi_daily_get_insight2 t
        <where>
            <if test="req.metric != null and req.metric != ''">
                and t.metric = #{req.metric}
            </if>
            <if test="req.startDate != null and req.startDate != ''">
                and t.date_points &gt;= #{req.startDate}
            </if>
            <if test="req.endDate != null and req.endDate != ''">
                and t.date_points &lt;= #{req.endDate}
            </if>
            <if test="req.site != null and req.site != ''">
                and t.sub_dimension_points = #{req.site}
            </if>
        </where>

    </select>

    <select id="getInsight2OfAnomalies" parameterType="jp.co.futech.module.insight.po.req.anomaly.AnomalyGetInsight2Req"
            resultType="jp.co.futech.module.insight.po.res.anomaly.AnomalyGetInsight2Res$Anomalie">
        with t2 as (select dt, max(create_time) as max_create_time from t_bi_note_dot group by dt)
        select
        t1.metric as metricAnomalies,
        t1.site_anomalies as siteAnomalies,
        t1.date_anomalies as dateAnomalies,
        t1.ggr_anomalies as ggrAnomalies,
        t1.detetion_time_anomalies as detetionTimeAnomalies,
        t1.severity_anomalies as severityAnomalies,
        t1.rate_anomalies as rateAnomalies,
        t1.anomaly_describe_anomalies as anomalyDescribeAnomalies,
        t1.cause_analysis_anomalies as causeAnalysisAnomalies,
        t1.detail_anomalies as detailAnomalies,
        t3.note as note,
        t3.remark as remark
        from t_bi_daily_get_insight2 t1
        left join t2
        on t1.date_points = t2.dt
        left join t_bi_note_dot t3 on t1.metric = t3.metric and t1.sub_dimension_points = t3.site and
        t2.max_create_time = t3.create_time
        <where>
            <if test="req.metric != null and req.metric != ''">
                and t1.metric_anomalies = #{req.metric}
            </if>
            <if test="req.startDate != null and req.startDate != ''">
                and t1.date_anomalies &gt;= #{req.startDate}
            </if>
            <if test="req.endDate != null and req.endDate != ''">
                and t1.date_points &lt;= #{req.endDate}
            </if>
            <if test="req.site != null and req.site != ''">
                and t1.site_anomalies = #{req.site}
            </if>
            <if test="req.severity != null and req.severity.size() == 1">
                and t1.severity_anomalies = #{req.severity[0]}
            </if>
            <if test="req.severity != null and req.severity.size() > 1">
                and t1.severity_anomalies in
                <foreach collection="req.severity" item="severityItem" index="index" open="(" separator="," close=")">
                    #{severityItem}
                </foreach>
            </if>
            <if test="req.search != null and req.search != ''">
                and t1.detail_anomalies like concat('%',#{req.search},'%')
            </if>
            <if test="req.note != null and req.note.size() == 1">
                and t3.note = #{req.note[0]}
            </if>
            <if test="req.note != null and req.note.size() > 1">
                and t3.note in
                <foreach collection="req.note" item="noteItem" index="index" open="(" separator="," close=")">
                    #{noteItem}
                </foreach>
            </if>
        </where>
    </select>

</mapper>
